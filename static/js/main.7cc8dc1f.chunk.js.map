{"version":3,"sources":["components/Navbar.js","components/TextForm.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","darkMode","htmlFor","button","TextForm","useState","text","setText","style","color","heading","placeholder","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalise","msg","App","setButton","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7cc8dc1f.chunk.js","sourcesContent":["import React from 'react'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.darkMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.button}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('All words are in Uppercase now.','success')\r\n\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert('All words are in Lowercase now.','success')\r\n\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById('myBox')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('Copied to Clipboard.','success')\r\n        \r\n    }\r\n    const handleClear = () => {\r\n        var text = document.getElementById('myBox')\r\n        setText(text.value = '')\r\n        props.showAlert('Your text has been cleared.','success')\r\n        \r\n    }\r\n    const handleRemove = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Extra spaces has been removed.','success')\r\n\r\n       \r\n    }\r\n    const handleOnChange = (event) => {\r\n\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"mb-3\">\r\n                    <h3 style = {{color :  props.mode === 'light'?'#343a40':'white'}} >{props.heading}</h3>\r\n                    <textarea className=\"form-control\"  placeholder='Enter your text here' style = {{backgroundColor: props.mode === 'dark'?'#343a40':'white', color :  props.mode === 'light'?'#343a40':'white'}}  value={text} onChange={handleOnChange} id=\"myBox\" rows=\"7\" ></textarea>\r\n                    <button type=\"button\" className=\"btn btn-primary my-3 mx-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                    <button type=\"button\" className=\"btn btn-primary my-3 \" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                    <button type=\"button\" className=\"btn btn-primary my-3 mx-3 \" onClick={handleCopy}>Copy text</button>\r\n                    <button type=\"button\" className=\"btn btn-primary my-3 \" onClick={handleClear}>Clear text</button>\r\n                    <button type=\"button\" className=\"btn btn-primary my-3  mx-3\" onClick={handleRemove}>Remove extra spaces</button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container\" style = {{color :  props.mode === 'light'?'#343a40':'white'}}>\r\n                <h4>Your text summary</h4>\r\n                <p> {text.split(' ').length} word and {text.length} character</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            </div>\r\n\r\n            <div className=\"container\" style = {{color :  props.mode === 'light'?'#343a40':'white'}}>\r\n                <h5>Preview</h5>\r\n                <p >{text.length>0?text:'Enter something in the textbox to preview it here'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalise = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n     props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>\r\n        \r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [button, setButton] = useState('Enable dark mode')\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  \n   const darkMode = ()=>{\n       if(mode === 'light'){\n           setMode('dark')\n           setButton('Disable dark mode')\n           showAlert('Dark mode has been enabled','success')\n           document.body.style.backgroundColor = '#343a40'\n       }\n       else{\n           setMode('light')\n           setButton('Enable dark mode')\n           showAlert('Dark mode has been disabled','success')\n\n           document.body.style.backgroundColor = 'white'\n\n       }\n   }\n   \n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode = {mode} darkMode = {darkMode} button = {button} />\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\" alert={alert} mode = {mode}>\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n        <TextForm heading=\"Enter your text to analyze below\" showAlert={showAlert}  mode = {mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}